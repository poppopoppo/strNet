# 1 "lexer.mll"
 
    open Parser
    exception Error of string

# 7 "lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\233\255\234\255\002\000\037\000\047\000\057\000\238\255\
    \239\255\240\255\241\255\242\255\243\255\244\255\000\000\026\000\
    \000\000\001\000\000\000\000\000\253\255\254\255\255\255\000\000\
    \251\255\252\255\001\000\000\000\250\255\246\255\247\255\033\000\
    \249\255\004\000\248\255\034\000\034\000\245\255\071\000\091\000\
    ";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\020\000\019\000\022\000\022\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\022\000\022\000\
    \022\000\022\000\022\000\022\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\018\000\019\000\
    ";
  Lexing.lex_default =
   "\001\000\000\000\000\000\255\255\255\255\255\255\255\255\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\000\000\000\000\000\000\255\255\
    \000\000\000\000\255\255\255\255\000\000\000\000\000\000\255\255\
    \000\000\255\255\000\000\255\255\255\255\000\000\255\255\255\255\
    ";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\003\000\003\000\003\000\003\000\003\000\000\000\003\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \003\000\000\000\003\000\000\000\000\000\000\000\000\000\000\000\
    \013\000\012\000\007\000\008\000\000\000\005\000\011\000\000\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\010\000\000\000\000\000\000\000\009\000\006\000\
    \000\000\000\000\031\000\015\000\029\000\035\000\017\000\034\000\
    \000\000\000\000\000\000\028\000\026\000\000\000\000\000\016\000\
    \000\000\000\000\030\000\027\000\014\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\039\000\
    \039\000\039\000\039\000\039\000\039\000\039\000\039\000\039\000\
    \039\000\038\000\038\000\038\000\038\000\038\000\038\000\038\000\
    \038\000\038\000\038\000\033\000\032\000\036\000\037\000\038\000\
    \038\000\038\000\038\000\038\000\038\000\038\000\038\000\038\000\
    \038\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\023\000\039\000\039\000\039\000\039\000\039\000\
    \039\000\039\000\039\000\039\000\039\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\024\000\025\000\000\000\000\000\000\000\022\000\
    \000\000\000\000\000\000\020\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\021\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\019\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\018\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\003\000\003\000\000\000\255\255\003\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\003\000\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\255\255\000\000\000\000\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\255\255\255\255\255\255\000\000\000\000\
    \255\255\255\255\016\000\000\000\026\000\014\000\000\000\033\000\
    \255\255\255\255\255\255\027\000\017\000\255\255\255\255\000\000\
    \255\255\255\255\016\000\017\000\000\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\015\000\031\000\035\000\036\000\038\000\
    \038\000\038\000\038\000\038\000\038\000\038\000\038\000\038\000\
    \038\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\018\000\039\000\039\000\039\000\039\000\039\000\
    \039\000\039\000\039\000\039\000\039\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\023\000\023\000\255\255\255\255\255\255\019\000\
    \255\255\255\255\255\255\019\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\019\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec token lexbuf =
   __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 15 "lexer.mll"
                           ( TRS )
# 141 "lexer.ml"

  | 1 ->
# 17 "lexer.mll"
                           ( R_OPR          )
# 146 "lexer.ml"

  | 2 ->
# 18 "lexer.mll"
                           ( L_OPR            )
# 151 "lexer.ml"

  | 3 ->
# 21 "lexer.mll"
                               ( R_SRC                                )
# 156 "lexer.ml"

  | 4 ->
# 22 "lexer.mll"
                               ( L_SRC             )
# 161 "lexer.ml"

  | 5 ->
# 23 "lexer.mll"
              ( FRK )
# 166 "lexer.ml"

  | 6 ->
# 24 "lexer.mll"
              ( OBS )
# 171 "lexer.ml"

  | 7 ->
# 25 "lexer.mll"
            ( CYC )
# 176 "lexer.ml"

  | 8 ->
# 26 "lexer.mll"
            ( OR )
# 181 "lexer.ml"

  | 9 ->
# 27 "lexer.mll"
            ( FKC )
# 186 "lexer.ml"

  | 10 ->
# 28 "lexer.mll"
              ( TEST )
# 191 "lexer.ml"

  | 11 ->
# 29 "lexer.mll"
          ( L_PRN )
# 196 "lexer.ml"

  | 12 ->
# 30 "lexer.mll"
          ( R_PRN )
# 201 "lexer.ml"

  | 13 ->
# 31 "lexer.mll"
          ( DOT )
# 206 "lexer.ml"

  | 14 ->
# 32 "lexer.mll"
          ( CLN )
# 211 "lexer.ml"

  | 15 ->
# 33 "lexer.mll"
          ( END )
# 216 "lexer.ml"

  | 16 ->
# 34 "lexer.mll"
          ( PLS )
# 221 "lexer.ml"

  | 17 ->
# 35 "lexer.mll"
          ( MLT )
# 226 "lexer.ml"

  | 18 ->
let
# 36 "lexer.mll"
                     lxm
# 232 "lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 1) lexbuf.Lexing.lex_curr_pos in
# 36 "lexer.mll"
                          ( VAL(int_of_string lxm) )
# 236 "lexer.ml"

  | 19 ->
let
# 37 "lexer.mll"
                               lxm
# 242 "lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 37 "lexer.mll"
                                    ( INT (int_of_string lxm) )
# 246 "lexer.ml"

  | 20 ->
# 39 "lexer.mll"
                    ( token lexbuf                         )
# 251 "lexer.ml"

  | 21 ->
# 40 "lexer.mll"
                    ( EOF                                  )
# 256 "lexer.ml"

  | 22 ->
# 41 "lexer.mll"
                    ( raise (Error (Printf.sprintf
                      "At offset %d: unexpected character.\n"
                      (Lexing.lexeme_start lexbuf))) )
# 263 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

;;

